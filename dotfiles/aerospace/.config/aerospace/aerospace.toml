# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = [
  # Focus the main workspace
  'workspace ü¶Ñ',

  # Move windows by dragging any part of the window with pressing `cmd + ctrl`
  # See: https://nikitabobko.github.io/AeroSpace/goodness#move-by-dragging-any-part-of-the-window
  'exec-and-forget defaults write -g NSWindowShouldDragOnGesture YES',

  # Disable windows opening animations
  # See: https://nikitabobko.github.io/AeroSpace/goodness#disable-open-animations
  'exec-and-forget defaults write -g NSAutomaticWindowAnimationsEnabled -bool false',

  # Enable Group windows by application setting. Or in System Settings:
  # System Settings ‚Üí Desktop & Dock ‚Üí Group windows by application
  # It would work after reboot or run `killall Dock` to make it work immediately 
  'exec-and-forget defaults write com.apple.dock expose-group-apps -bool true',

  # To speed up SMB file browsing, you can prevent macOS from reading .DS_Store files on SMB shares.
  # This makes the Finder use only basic information to immediately display each folder's contents in alphanumeric order.
  # check for more detail. https://support.apple.com/en-us/102064
  'exec-and-forget defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool TRUE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 30

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See: https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See: https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See: https://nikitabobko.github.io/AeroSpace/commands#move-mouse
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 12
inner.vertical = 12
outer.left = 12
outer.bottom = 12
outer.top = 12
outer.right = 12

# Define my fancy unicorn key notation
[key-mapping.key-notation-to-key-code]
# Home = '1'
# Browser = '2'
# Terminal = '3'
# Music = '4'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'
alt-shift-slash = 'layout tiles horizontal vertical'
alt-shift-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
ctrl-alt-h = [
  'focus --boundaries-action wrap-around-the-workspace left',
  'move-mouse window-lazy-center',
]
ctrl-alt-j = [
  'focus --boundaries-action wrap-around-the-workspace down',
  'move-mouse window-lazy-center',
]
ctrl-alt-k = [
  'focus --boundaries-action wrap-around-the-workspace up',
  'move-mouse window-lazy-center',
]
ctrl-alt-l = [
  'focus --boundaries-action wrap-around-the-workspace right',
  'move-mouse window-lazy-center',
]

# See: https://nikitabobko.github.io/AeroSpace/commands#move
ctrl-alt-left = 'move left'
ctrl-alt-down = 'move down'
ctrl-alt-up = 'move up'
ctrl-alt-right = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
shift-alt-minus = 'resize smart -25'
shift-alt-equal = 'resize smart +25'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-esc = ['workspace ü¶Ñ', 'move-mouse window-lazy-center']
alt-1 = ['workspace üç£', 'move-mouse window-lazy-center']
alt-2 = ['workspace üê≥', 'move-mouse window-lazy-center']
alt-3 = ['workspace üíª', 'move-mouse window-lazy-center']
alt-4 = ['workspace üéß', 'move-mouse window-lazy-center']
alt-q = ['workspace Q', 'move-mouse window-lazy-center']
alt-w = ['workspace W', 'move-mouse window-lazy-center']
alt-e = ['workspace E', 'move-mouse window-lazy-center']
alt-r = ['workspace R', 'move-mouse window-lazy-center']

ctrl-alt-leftSquareBracket = 'workspace --wrap-around prev'
ctrl-alt-rightSquareBracket = 'workspace --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
shift-alt-semicolon = 'mode service'

# Disable annoying and useless "hide application" shortcut
# See: https://nikitabobko.github.io/AeroSpace/goodness#disable-hide-app
cmd-h = []       # Disable "hide application"
cmd-alt-h = []   # Disable "hide others"
cmd-m = []       # Minimize current window to dock
cmd-shift-m = [] # Minimize all windows to dock

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']

# Balance sizes
shift-alt-equal = ['balance-sizes', 'mode main']
# Reset layout
shift-alt-minus = ['flatten-workspace-tree', 'mode main']
# Toggle fullscreen
shift-alt-f = ['fullscreen', 'mode main']
# Toggle floating
shift-alt-space = ['layout floating tiling', 'mode main']

shift-alt-h = ['join-with left', 'mode main']
shift-alt-j = ['join-with down', 'mode main']
shift-alt-k = ['join-with up', 'mode main']
shift-alt-l = ['join-with right', 'mode main']


# See: https://nikitabobko.github.io/AeroSpace/commands#swap
shift-alt-left = ['swap left', 'mode main']
shift-alt-down = ['swap down', 'mode main']
shift-alt-up = ['swap up', 'mode main']
shift-alt-right = ['swap right', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
shift-alt-tab = [
  'move-workspace-to-monitor --wrap-around next',
  'focus-monitor --wrap-around next',
  'mode main',
]

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
# Move focused window to workspace
shift-alt-esc = ['move-node-to-workspace ü¶Ñ', 'mode main']
shift-alt-1 = ['move-node-to-workspace üç£', 'mode main']
shift-alt-2 = ['move-node-to-workspace üê≥', 'mode main']
shift-alt-3 = ['move-node-to-workspace üíª', 'mode main']
shift-alt-4 = ['move-node-to-workspace üéß', 'mode main']
shift-alt-q = ['move-node-to-workspace Q', 'mode main']
shift-alt-w = ['move-node-to-workspace W', 'mode main']
shift-alt-e = ['move-node-to-workspace E', 'mode main']
shift-alt-r = ['move-node-to-workspace R', 'mode main']

# See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
# assign workspaces to always appear on particular monitors
[workspace-to-monitor-force-assignment]
"ü¶Ñ" = "main"
"üç£" = ['secondary', 'main']
"üê≥" = ['secondary', 'main']
"üíª" = ['secondary', 'main']


# See: https://nikitabobko.github.io/AeroSpace/guide#on-window-detected-callback
# For now, only the following commands are supported in `on-window-detected.run` callback
# - move-node-to-workspace
# - layout
# See: https://github.com/nikitabobko/AeroSpace/issues/20 for further supported commands

# Put everything in the main workspace (ü¶Ñ) by default when Aerospace starts
[[on-window-detected]]
if.during-aerospace-startup = true
check-further-callbacks = true
run = "move-node-to-workspace ü¶Ñ"

# Workspace Assignment
[[on-window-detected]]
if.app-id = 'com.google.Chrome'
if.during-aerospace-startup = true
run = "move-node-to-workspace üê≥"

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
if.during-aerospace-startup = true
run = "move-node-to-workspace üç£"

[[on-window-detected]]
if.app-id = 'com.mitchellh.ghostty'
if.during-aerospace-startup = true
run = "move-node-to-workspace üíª"

# Forced Floating Windows
[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = "layout floating"

[[on-window-detected]]
if.app-id = "com.apple.finder"
run = "layout floating"

[[on-window-detected]]
if.app-id = "com.apple.Preview"
run = "layout floating"

[[on-window-detected]]
if.app-id = "com.tencent.xinWeChat"
check-further-callbacks = true
run = "layout floating"

[[on-window-detected]]
if.app-id = "com.tencent.xinWeChat"
if.window-title-regex-substring = "Weixin"
run = "layout tiling"

[[on-window-detected]]
if.app-name-regex-substring = "mpv"
run = "layout floating"
