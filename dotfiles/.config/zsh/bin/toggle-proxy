#!/bin/zsh


local device='Wi-Fi'
local default_server='127.0.0.1'
local next_state="$1"

local SOCKS_PROXY="socksfirewall"
local HTTP_PROXY="web"
local HTTPS_PROXY="secureweb"

local _networkcheck() {
    case "$proxy" in
      "$SOCKS_PROXY")
        name="Socks Proxy"
        ;;
      "$HTTP_PROXY")
        name="HTTP Proxy"
        ;;
      "$HTTPS_PROXY")
        name="HTTPS Proxy"
        ;;
      *)
        name="Unknown Proxy"
        ;;
    esac

    state=$(_networkconfig "Enabled")

    if [[ "$state" == "Yes" ]]; then
      state="%F{$GUI_GREEN}%f"
    else
      state="%F{$GUI_RED}%f"
    fi

    print -cP "$state $name"
}

local _networkconfig() {
    val=$(networksetup $check_action $device | grep -m1 $1 | cut -d' ' -f2)
    echo "$val"
}

local _networktoggle() {
    if [ $1 == 'No' ]; then
        state='on'
    else
        state='off'
    fi
    networksetup $toggle_action $device $state
}

local run() {
    state=$(_networkconfig "Enabled")
    server=$(_networkconfig "Server")
    port=$(_networkconfig "Port")

    if [[ "$next_state" == "on" ]]; then
      # Force to enable the proxy
      state="No"
    fi

    if [[ "$state" == "No" ]]; then
        reset=0

        if [[ $server != $default_server || $port != $default_port ]]; then
            reset=1
        fi

        if [ $reset -eq 1 ]; then
            networksetup $set_action $device $default_server $default_port
        fi

        networksetup $toggle_action $device "on"
    else
        networksetup $toggle_action $device "off"
    fi

    echo "$(_networkcheck)"
}

local setup_socks_proxy() {
  default_port="1080"
  run
}

local setup_web_proxy() {
  default_port="1081"
  run
}

local _toggle() {
  if [[ "$next_state" != "on" ]]; then
    next_state=""
  fi
  
  for proxy in "$SOCKS_PROXY" "$HTTP_PROXY" "$HTTPS_PROXY"
  do
    set_action="-set${proxy}proxy"
    toggle_action="-set${proxy}proxystate"
    check_action="-get${proxy}proxy"

    if [[ $proxy == *"socks"* ]]; then
      setup_socks_proxy
    else
      setup_web_proxy
    fi
  done
}

_toggle
